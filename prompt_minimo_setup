#
# A minimal theme, using only a few colors,
# based on 'minimal' that displays basic information.
#
# Authors:
#   Brian Tse <briankftse@gmail.com>
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Nils Uliczka <nils.uliczka@darookee.net>
#
# Screenshots:
#   http://i.imgur.com/IOPW1nG.png
#

+vi-git-status () {
    local -a stashes
    local -a misc
    local -a gitstatus
    local ahead behind remote

    if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
        hook_com[unstaged]='%F{red}●%f'
    fi

    if [[ -s ${hook_com[base]}/.git/refs/stash ]] ; then
        stashes=$(git stash list 2>/dev/null | wc -l)
        [[ -n $stashes ]] && misc+=("%F{cyan}*${stashes}%f")
    fi

    # Are we on a remote-tracking branch?
    remote=${$(git rev-parse --verify ${hook_com[branch]}@{upstream} \
        --symbolic-full-name 2>/dev/null)/refs\/remotes\/}

    if [[ -n ${remote} ]] ; then
        ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l)
        (( $ahead )) && gitstatus+=( "%F{green}+${ahead}%f" )

        behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l)
        (( $behind )) && gitstatus+=( "%F{red}-${behind}%f" )

        misc+=("${(j:/:)gitstatus}")
    fi

    hook_misc=${(j: :)misc}
    [[ -n $hook_misc ]] && hook_com[misc]=" %F{yellow}[%f${hook_misc}%F{yellow}]%f"

    return 0
}

start_time=$SECONDS
function prompt_minimo_preexec {
  start_time=$SECONDS
}

function calc_elapsed_time {
  if [[ $timer_result -ge 3600 ]]; then
    let "timer_hours = $timer_result / 3600"
    let "remainder = $timer_result % 3600"
    let "timer_minutes = $remainder / 60"
    let "timer_seconds = $remainder % 60"
    print -P "%B%F{red}>>> elapsed time ${timer_hours}h${timer_minutes}m${timer_seconds}s%b"
  elif [[ $timer_result -ge 60 ]]; then
    let "timer_minutes = $timer_result / 60"
    let "timer_seconds = $timer_result % 60"
    print -P "%B%F{yellow}>>> elapsed time ${timer_minutes}m${timer_seconds}s%b"
  elif [[ $timer_result -gt 10 ]]; then
    print -P "%B%F{green}>>> elapsed time ${timer_result}s%b"
  fi
}

function prompt_minimo_precmd {
  vcs_info

  [[ ! -w $PWD ]] && _prompt_minimo_pwd_color='%F{red}' || _prompt_minimo_pwd_color='%f'

  [[ -n ${vcs_info_msg_0_} ]] && _prompt_minimo_pwd_or_vcs="${vcs_info_msg_0_} " || _prompt_minimo_pwd_or_vcs="${_prompt_minimo_pwd_color}%2~%f "

  timer_result=$(($SECONDS-$start_time))
  if [[ $timer_result -gt 10 ]]; then
      calc_elapsed_time
  fi
  start_time=$SECONDS
}

function prompt_minimo_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  # Add hook for calling vcs_info before each command.
  add-zsh-hook preexec prompt_minimo_preexec
  add-zsh-hook precmd prompt_minimo_precmd

  # Set vcs_info parameters.
  zstyle ':vcs_info:*' enable bzr git hg svn
  zstyle ':vcs_info:*' check-for-changes true
  zstyle ':vcs_info:*' stagedstr '%F{green}●%f'
  zstyle ':vcs_info:*' unstagedstr '%F{yellow}●%f'
  zstyle ':vcs_info:*' formats '%r%F{yellow}/%f%S (%s:%b%c%u)%m'
  zstyle ':vcs_info:*' actionformats "%r%F{yellow}/%f%S (%s:%b%c%u|[%F{cyan}%a%f])"
  zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b|%F{cyan}%r%f'
  zstyle ':vcs_info:git*+set-message:*' hooks git-status

  local -a parts

  [[ ( -n $SSH_CLIENT || `logname` != `whoami` ) ]] && parts+=( '%(!.%F{red}.%F{white})%n%F{yellow}@%f' ) || parts+=( '%(!.%F{red}%n%F{yellow}@%f.%f)' )
  parts+=( '${HOST} ')
  parts+=( '${_prompt_minimo_pwd_or_vcs}' )
  parts+=( '%(?.%F{white}.%F{red})»%f' )

  # Define prompts.
  PROMPT="${(j::)parts} "
  RPROMPT=''
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_minimo_setup "$@"
